{"version":3,"sources":["Components/ProductView.js","App.js","reportWebVitals.js","index.js"],"names":["Item","props","useState","Add","setAdd","useEffect","console","log","KeyGenr","index","Date","getTime","KeyGenrForButton","className","ProductList","map","el","name","price","onClick","AddCart","NewArr","length","splice","DeleteCart","App","myData","data","KeyGenrForApp","style","backgroundColor","productList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6fA0DeA,MAvDf,SAAcC,GAET,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAUAC,qBAAU,WACPC,QAAQC,IAAIJ,KAEb,CAACA,IAIJ,IAaIK,EAAU,SAACC,GACX,MAAM,GAAN,OAAWA,EAAX,aAAsB,IAAIC,MAAOC,YAEjCC,EAAkB,WAClB,MAAM,GAAN,QAAW,IAAIF,MAAOC,YAG1B,OACI,qBAAKE,UAAU,QAAf,SACKZ,EAAMa,YAAYC,KAAI,SAACC,EAAGP,GAAJ,OAAY,sBAA0BI,UAAU,cAApC,UAChC,yCAAmCG,EAAGC,OAA7BT,EAAQQ,EAAGC,OACpB,0CAAqCD,EAAGE,QAA/BV,EAAQQ,EAAGE,QAEpB,wBAAiCC,QAAS,kBAzCvC,SAACH,GAEXZ,EAAO,GAAD,mBAAKD,GAAL,CAASa,KACfV,QAAQC,IAAI,8BAsCyCa,CAAQJ,IAAtD,4BAAaJ,KACb,wBAAiCO,QAAS,kBA3BpC,SAACV,GACd,IAAIY,EAAM,YAAOlB,GAEjBG,QAAQC,IAAIE,GACTY,EAAOC,OAAO,GACbD,EAAOE,OAAOd,EAAM,GACpBH,QAAQC,IAAI,mCAGZD,QAAQC,IAAI,iBAEhBH,EAAOiB,GAgB8CG,CAAWf,IAAzD,6BAAaG,OAL6BJ,EAAQC,U,OCJlDgB,MAnCf,WACEnB,QAAQC,IAAImB,EAAOC,MACnB,IAAIC,EAAc,SAACnB,GACjB,MAAM,GAAN,OAAWA,EAAX,aAAsB,IAAIC,MAAOC,YAOnC,OACE,qBAAKE,UAAU,MAAf,SAEIa,EAAOC,KAAKZ,KACV,SAACC,EAAGP,GACA,OAEA,qCAAE,sBAAKI,UAAU,SAAf,UAAwB,4BAAgBG,EAAGC,MAAXR,GAElC,oBAA+BoB,MAAO,CAACC,gBAAgB,UAA9CF,EAAcnB,OACvB,qBAAKI,UAAU,OAAf,SACA,cAAC,EAAD,CAA6BC,YAAaE,EAAGe,aAdjD,GAAN,QAAW,IAAIrB,MAAOC,aAaeiB,EAAcZ,EAAGC,gBCb3Ce,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d308f6fb.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ProductView.css'\r\nimport { useState, useEffect, useMemo } from 'react'\r\nfunction Item(props) {\r\n\r\n     const [Add, setAdd] = useState([])\r\n\r\n    let AddCart = (el)=>{\r\n        \r\n        setAdd([...Add,el])\r\n        console.log(\"Product Added to the cart.\");\r\n    \r\n\r\n\r\n    }\r\n     useEffect(() => {\r\n        console.log(Add);\r\n        \r\n    }, [Add])\r\n\r\n    \r\n      \r\n    let DeleteCart = (index)=>{\r\n        let NewArr = [...Add];\r\n        // let index = Array.prototype.indexOf(el);\r\n        console.log(index);\r\n        if(NewArr.length>0){\r\n            NewArr.splice(index,1);\r\n            console.log(\"Product removed from the cart.\")\r\n        }\r\n        else{\r\n            console.log(\"Cart is Empty\")\r\n        }\r\n        setAdd(NewArr)\r\n    }\r\n    let KeyGenr = (index) =>{\r\n        return `${ index }_${ new Date().getTime() }`;\r\n    }\r\n    let KeyGenrForButton =()=>{\r\n        return `${ new Date().getTime() }`;\r\n\r\n    }\r\n    return (\r\n        <div className=\"Outer\">\r\n            {props.ProductList.map((el,index)=><div key={KeyGenr(index)} className=\"ProductCell\">\r\n               <h3 key={KeyGenr(el.name)}>Name : {el.name}</h3>\r\n               <h3 key={KeyGenr(el.price)}>Price : {el.price}</h3>\r\n            \r\n               <button key={KeyGenrForButton()} onClick={()=>AddCart(el)}>Add to the cart</button>\r\n               <button key={KeyGenrForButton()} onClick={()=>DeleteCart(index)}>Remove from cart</button>\r\n            \r\n            \r\n\r\n            </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","\nimport './App.css';\nimport Item from './Components/ProductView';\nimport myData from './product.json';\n\nfunction App() {\n  console.log(myData.data)\n  let KeyGenrForApp=(index)=>{\n    return `${ index }_${ new Date().getTime() }`;\n\n  }\n  let KeyGenrForItem =()=>{\n    return `${ new Date().getTime() }`;\n\n}\n  return (\n    <div className=\"App\">\n      {\n        myData.data.map(\n          (el,index)=>{\n              return (\n                \n              <><div className=\"Header\"><p key={index}>{el.name}</p>\n            \n              <hr key={KeyGenrForApp(index)} style={{backgroundColor:\"black\"}}/></div>\n              <div className=\"Itme\" key={KeyGenrForApp(el.name)}>\n              <Item key={KeyGenrForItem()} ProductList={el.productList}/>\n\n              </div>\n              \n              </>\n                \n              )\n          }\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}